// Code generated from Sql.g4 by ANTLR 4.10.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SqlLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var sqllexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func sqllexerLexerInit() {
	staticData := &sqllexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "", "", "','", "'('", "')'", "';'", "", "", "", "", "", "", "",
		"", "", "'='", "'>'", "'<'", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "'*'",
	}
	staticData.symbolicNames = []string{
		"", "SPACE", "WS", "COMMA", "L_BRACKET", "R_BRACKET", "EOQ", "K_SELECT",
		"K_WHERE", "K_WINDOW_TUMBLING", "K_GROUP_BY", "K_AND", "K_OR", "K_IS",
		"K_LIKE", "K_NOT_LIKE", "K_EQUAL", "K_GREATER", "K_LESS", "K_LESS_EQUAL",
		"K_GREATER_EQUAL", "K_NOT_EQUAL", "K_NULL", "K_IS_NULL", "K_IS_NOT_NULL",
		"K_NOT", "K_NOT_IN", "K_IN", "K_TRUE", "K_FALSE", "K_COUNT", "K_MIN",
		"K_MAX", "K_AVG", "IDENTIFIER", "BOOLEAN_LITERAL", "NUMERIC_LITERAL",
		"STRING_LITERAL", "STAR",
	}
	staticData.ruleNames = []string{
		"SPACE", "WS", "COMMA", "L_BRACKET", "R_BRACKET", "EOQ", "K_SELECT",
		"K_WHERE", "K_WINDOW_TUMBLING", "K_GROUP_BY", "K_AND", "K_OR", "K_IS",
		"K_LIKE", "K_NOT_LIKE", "K_EQUAL", "K_GREATER", "K_LESS", "K_LESS_EQUAL",
		"K_GREATER_EQUAL", "K_NOT_EQUAL", "K_NULL", "K_IS_NULL", "K_IS_NOT_NULL",
		"K_NOT", "K_NOT_IN", "K_IN", "K_TRUE", "K_FALSE", "K_COUNT", "K_MIN",
		"K_MAX", "K_AVG", "IDENTIFIER", "BOOLEAN_LITERAL", "NUMERIC_LITERAL",
		"STRING_LITERAL", "STAR", "DIGIT", "A", "B", "C", "D", "E", "F", "G",
		"H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U",
		"V", "W", "X", "Y", "Z",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 38, 435, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 4, 1, 137,
		8, 1, 11, 1, 12, 1, 138, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4,
		1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16,
		1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1,
		20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 5, 33, 288, 8,
		33, 10, 33, 12, 33, 291, 9, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 5, 33,
		298, 8, 33, 10, 33, 12, 33, 301, 9, 33, 1, 33, 1, 33, 1, 33, 5, 33, 306,
		8, 33, 10, 33, 12, 33, 309, 9, 33, 1, 33, 1, 33, 1, 33, 5, 33, 314, 8,
		33, 10, 33, 12, 33, 317, 9, 33, 3, 33, 319, 8, 33, 1, 34, 1, 34, 3, 34,
		323, 8, 34, 1, 35, 4, 35, 326, 8, 35, 11, 35, 12, 35, 327, 1, 35, 1, 35,
		5, 35, 332, 8, 35, 10, 35, 12, 35, 335, 9, 35, 3, 35, 337, 8, 35, 1, 35,
		1, 35, 3, 35, 341, 8, 35, 1, 35, 4, 35, 344, 8, 35, 11, 35, 12, 35, 345,
		3, 35, 348, 8, 35, 1, 35, 1, 35, 4, 35, 352, 8, 35, 11, 35, 12, 35, 353,
		1, 35, 1, 35, 3, 35, 358, 8, 35, 1, 35, 4, 35, 361, 8, 35, 11, 35, 12,
		35, 362, 3, 35, 365, 8, 35, 3, 35, 367, 8, 35, 1, 36, 1, 36, 1, 36, 1,
		36, 5, 36, 373, 8, 36, 10, 36, 12, 36, 376, 9, 36, 1, 36, 1, 36, 1, 37,
		1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1,
		42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47,
		1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1,
		53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58,
		1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1,
		63, 1, 64, 1, 64, 0, 0, 65, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7,
		15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33,
		17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
		26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69,
		35, 71, 36, 73, 37, 75, 38, 77, 0, 79, 0, 81, 0, 83, 0, 85, 0, 87, 0, 89,
		0, 91, 0, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105, 0, 107, 0, 109,
		0, 111, 0, 113, 0, 115, 0, 117, 0, 119, 0, 121, 0, 123, 0, 125, 0, 127,
		0, 129, 0, 1, 0, 36, 3, 0, 9, 11, 13, 13, 32, 32, 2, 0, 9, 9, 32, 32, 1,
		0, 34, 34, 1, 0, 96, 96, 1, 0, 93, 93, 3, 0, 65, 90, 95, 95, 97, 122, 4,
		0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 43, 43, 45, 45, 1, 0, 39, 39,
		1, 0, 48, 57, 2, 0, 65, 65, 97, 97, 2, 0, 66, 66, 98, 98, 2, 0, 67, 67,
		99, 99, 2, 0, 68, 68, 100, 100, 2, 0, 69, 69, 101, 101, 2, 0, 70, 70, 102,
		102, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104, 2, 0, 73, 73, 105,
		105, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107, 2, 0, 76, 76, 108,
		108, 2, 0, 77, 77, 109, 109, 2, 0, 78, 78, 110, 110, 2, 0, 79, 79, 111,
		111, 2, 0, 80, 80, 112, 112, 2, 0, 81, 81, 113, 113, 2, 0, 82, 82, 114,
		114, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117,
		117, 2, 0, 86, 86, 118, 118, 2, 0, 87, 87, 119, 119, 2, 0, 88, 88, 120,
		120, 2, 0, 89, 89, 121, 121, 2, 0, 90, 90, 122, 122, 431, 0, 1, 1, 0, 0,
		0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0,
		0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0,
		0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
		0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33,
		1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0,
		41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0,
		0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0,
		0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0,
		0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1,
		0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 1, 131, 1, 0, 0, 0, 3, 136,
		1, 0, 0, 0, 5, 142, 1, 0, 0, 0, 7, 144, 1, 0, 0, 0, 9, 146, 1, 0, 0, 0,
		11, 148, 1, 0, 0, 0, 13, 150, 1, 0, 0, 0, 15, 157, 1, 0, 0, 0, 17, 163,
		1, 0, 0, 0, 19, 179, 1, 0, 0, 0, 21, 188, 1, 0, 0, 0, 23, 192, 1, 0, 0,
		0, 25, 195, 1, 0, 0, 0, 27, 198, 1, 0, 0, 0, 29, 203, 1, 0, 0, 0, 31, 212,
		1, 0, 0, 0, 33, 214, 1, 0, 0, 0, 35, 216, 1, 0, 0, 0, 37, 218, 1, 0, 0,
		0, 39, 221, 1, 0, 0, 0, 41, 224, 1, 0, 0, 0, 43, 227, 1, 0, 0, 0, 45, 232,
		1, 0, 0, 0, 47, 236, 1, 0, 0, 0, 49, 242, 1, 0, 0, 0, 51, 246, 1, 0, 0,
		0, 53, 251, 1, 0, 0, 0, 55, 254, 1, 0, 0, 0, 57, 259, 1, 0, 0, 0, 59, 265,
		1, 0, 0, 0, 61, 271, 1, 0, 0, 0, 63, 275, 1, 0, 0, 0, 65, 279, 1, 0, 0,
		0, 67, 318, 1, 0, 0, 0, 69, 322, 1, 0, 0, 0, 71, 366, 1, 0, 0, 0, 73, 368,
		1, 0, 0, 0, 75, 379, 1, 0, 0, 0, 77, 381, 1, 0, 0, 0, 79, 383, 1, 0, 0,
		0, 81, 385, 1, 0, 0, 0, 83, 387, 1, 0, 0, 0, 85, 389, 1, 0, 0, 0, 87, 391,
		1, 0, 0, 0, 89, 393, 1, 0, 0, 0, 91, 395, 1, 0, 0, 0, 93, 397, 1, 0, 0,
		0, 95, 399, 1, 0, 0, 0, 97, 401, 1, 0, 0, 0, 99, 403, 1, 0, 0, 0, 101,
		405, 1, 0, 0, 0, 103, 407, 1, 0, 0, 0, 105, 409, 1, 0, 0, 0, 107, 411,
		1, 0, 0, 0, 109, 413, 1, 0, 0, 0, 111, 415, 1, 0, 0, 0, 113, 417, 1, 0,
		0, 0, 115, 419, 1, 0, 0, 0, 117, 421, 1, 0, 0, 0, 119, 423, 1, 0, 0, 0,
		121, 425, 1, 0, 0, 0, 123, 427, 1, 0, 0, 0, 125, 429, 1, 0, 0, 0, 127,
		431, 1, 0, 0, 0, 129, 433, 1, 0, 0, 0, 131, 132, 7, 0, 0, 0, 132, 133,
		1, 0, 0, 0, 133, 134, 6, 0, 0, 0, 134, 2, 1, 0, 0, 0, 135, 137, 7, 1, 0,
		0, 136, 135, 1, 0, 0, 0, 137, 138, 1, 0, 0, 0, 138, 136, 1, 0, 0, 0, 138,
		139, 1, 0, 0, 0, 139, 140, 1, 0, 0, 0, 140, 141, 6, 1, 1, 0, 141, 4, 1,
		0, 0, 0, 142, 143, 5, 44, 0, 0, 143, 6, 1, 0, 0, 0, 144, 145, 5, 40, 0,
		0, 145, 8, 1, 0, 0, 0, 146, 147, 5, 41, 0, 0, 147, 10, 1, 0, 0, 0, 148,
		149, 5, 59, 0, 0, 149, 12, 1, 0, 0, 0, 150, 151, 3, 115, 57, 0, 151, 152,
		3, 87, 43, 0, 152, 153, 3, 101, 50, 0, 153, 154, 3, 87, 43, 0, 154, 155,
		3, 83, 41, 0, 155, 156, 3, 117, 58, 0, 156, 14, 1, 0, 0, 0, 157, 158, 3,
		123, 61, 0, 158, 159, 3, 93, 46, 0, 159, 160, 3, 87, 43, 0, 160, 161, 3,
		113, 56, 0, 161, 162, 3, 87, 43, 0, 162, 16, 1, 0, 0, 0, 163, 164, 3, 123,
		61, 0, 164, 165, 3, 95, 47, 0, 165, 166, 3, 105, 52, 0, 166, 167, 3, 85,
		42, 0, 167, 168, 3, 107, 53, 0, 168, 169, 3, 123, 61, 0, 169, 170, 3, 1,
		0, 0, 170, 171, 3, 117, 58, 0, 171, 172, 3, 119, 59, 0, 172, 173, 3, 103,
		51, 0, 173, 174, 3, 81, 40, 0, 174, 175, 3, 101, 50, 0, 175, 176, 3, 95,
		47, 0, 176, 177, 3, 105, 52, 0, 177, 178, 3, 91, 45, 0, 178, 18, 1, 0,
		0, 0, 179, 180, 3, 91, 45, 0, 180, 181, 3, 113, 56, 0, 181, 182, 3, 107,
		53, 0, 182, 183, 3, 119, 59, 0, 183, 184, 3, 109, 54, 0, 184, 185, 3, 1,
		0, 0, 185, 186, 3, 81, 40, 0, 186, 187, 3, 127, 63, 0, 187, 20, 1, 0, 0,
		0, 188, 189, 3, 79, 39, 0, 189, 190, 3, 105, 52, 0, 190, 191, 3, 85, 42,
		0, 191, 22, 1, 0, 0, 0, 192, 193, 3, 107, 53, 0, 193, 194, 3, 113, 56,
		0, 194, 24, 1, 0, 0, 0, 195, 196, 3, 95, 47, 0, 196, 197, 3, 115, 57, 0,
		197, 26, 1, 0, 0, 0, 198, 199, 3, 101, 50, 0, 199, 200, 3, 95, 47, 0, 200,
		201, 3, 99, 49, 0, 201, 202, 3, 87, 43, 0, 202, 28, 1, 0, 0, 0, 203, 204,
		3, 105, 52, 0, 204, 205, 3, 107, 53, 0, 205, 206, 3, 117, 58, 0, 206, 207,
		3, 1, 0, 0, 207, 208, 3, 101, 50, 0, 208, 209, 3, 95, 47, 0, 209, 210,
		3, 99, 49, 0, 210, 211, 3, 87, 43, 0, 211, 30, 1, 0, 0, 0, 212, 213, 5,
		61, 0, 0, 213, 32, 1, 0, 0, 0, 214, 215, 5, 62, 0, 0, 215, 34, 1, 0, 0,
		0, 216, 217, 5, 60, 0, 0, 217, 36, 1, 0, 0, 0, 218, 219, 3, 35, 17, 0,
		219, 220, 3, 31, 15, 0, 220, 38, 1, 0, 0, 0, 221, 222, 3, 33, 16, 0, 222,
		223, 3, 31, 15, 0, 223, 40, 1, 0, 0, 0, 224, 225, 5, 33, 0, 0, 225, 226,
		3, 31, 15, 0, 226, 42, 1, 0, 0, 0, 227, 228, 3, 105, 52, 0, 228, 229, 3,
		119, 59, 0, 229, 230, 3, 101, 50, 0, 230, 231, 3, 101, 50, 0, 231, 44,
		1, 0, 0, 0, 232, 233, 3, 25, 12, 0, 233, 234, 3, 1, 0, 0, 234, 235, 3,
		43, 21, 0, 235, 46, 1, 0, 0, 0, 236, 237, 3, 25, 12, 0, 237, 238, 3, 1,
		0, 0, 238, 239, 3, 49, 24, 0, 239, 240, 3, 1, 0, 0, 240, 241, 3, 43, 21,
		0, 241, 48, 1, 0, 0, 0, 242, 243, 3, 105, 52, 0, 243, 244, 3, 107, 53,
		0, 244, 245, 3, 117, 58, 0, 245, 50, 1, 0, 0, 0, 246, 247, 3, 49, 24, 0,
		247, 248, 3, 1, 0, 0, 248, 249, 3, 95, 47, 0, 249, 250, 3, 105, 52, 0,
		250, 52, 1, 0, 0, 0, 251, 252, 3, 95, 47, 0, 252, 253, 3, 105, 52, 0, 253,
		54, 1, 0, 0, 0, 254, 255, 3, 117, 58, 0, 255, 256, 3, 113, 56, 0, 256,
		257, 3, 119, 59, 0, 257, 258, 3, 87, 43, 0, 258, 56, 1, 0, 0, 0, 259, 260,
		3, 89, 44, 0, 260, 261, 3, 79, 39, 0, 261, 262, 3, 101, 50, 0, 262, 263,
		3, 115, 57, 0, 263, 264, 3, 87, 43, 0, 264, 58, 1, 0, 0, 0, 265, 266, 3,
		83, 41, 0, 266, 267, 3, 107, 53, 0, 267, 268, 3, 119, 59, 0, 268, 269,
		3, 105, 52, 0, 269, 270, 3, 117, 58, 0, 270, 60, 1, 0, 0, 0, 271, 272,
		3, 103, 51, 0, 272, 273, 3, 95, 47, 0, 273, 274, 3, 105, 52, 0, 274, 62,
		1, 0, 0, 0, 275, 276, 3, 103, 51, 0, 276, 277, 3, 79, 39, 0, 277, 278,
		3, 125, 62, 0, 278, 64, 1, 0, 0, 0, 279, 280, 3, 79, 39, 0, 280, 281, 3,
		121, 60, 0, 281, 282, 3, 91, 45, 0, 282, 66, 1, 0, 0, 0, 283, 289, 5, 34,
		0, 0, 284, 288, 8, 2, 0, 0, 285, 286, 5, 34, 0, 0, 286, 288, 5, 34, 0,
		0, 287, 284, 1, 0, 0, 0, 287, 285, 1, 0, 0, 0, 288, 291, 1, 0, 0, 0, 289,
		287, 1, 0, 0, 0, 289, 290, 1, 0, 0, 0, 290, 292, 1, 0, 0, 0, 291, 289,
		1, 0, 0, 0, 292, 319, 5, 34, 0, 0, 293, 299, 5, 96, 0, 0, 294, 298, 8,
		3, 0, 0, 295, 296, 5, 96, 0, 0, 296, 298, 5, 96, 0, 0, 297, 294, 1, 0,
		0, 0, 297, 295, 1, 0, 0, 0, 298, 301, 1, 0, 0, 0, 299, 297, 1, 0, 0, 0,
		299, 300, 1, 0, 0, 0, 300, 302, 1, 0, 0, 0, 301, 299, 1, 0, 0, 0, 302,
		319, 5, 96, 0, 0, 303, 307, 5, 91, 0, 0, 304, 306, 8, 4, 0, 0, 305, 304,
		1, 0, 0, 0, 306, 309, 1, 0, 0, 0, 307, 305, 1, 0, 0, 0, 307, 308, 1, 0,
		0, 0, 308, 310, 1, 0, 0, 0, 309, 307, 1, 0, 0, 0, 310, 319, 5, 93, 0, 0,
		311, 315, 7, 5, 0, 0, 312, 314, 7, 6, 0, 0, 313, 312, 1, 0, 0, 0, 314,
		317, 1, 0, 0, 0, 315, 313, 1, 0, 0, 0, 315, 316, 1, 0, 0, 0, 316, 319,
		1, 0, 0, 0, 317, 315, 1, 0, 0, 0, 318, 283, 1, 0, 0, 0, 318, 293, 1, 0,
		0, 0, 318, 303, 1, 0, 0, 0, 318, 311, 1, 0, 0, 0, 319, 68, 1, 0, 0, 0,
		320, 323, 3, 55, 27, 0, 321, 323, 3, 57, 28, 0, 322, 320, 1, 0, 0, 0, 322,
		321, 1, 0, 0, 0, 323, 70, 1, 0, 0, 0, 324, 326, 3, 77, 38, 0, 325, 324,
		1, 0, 0, 0, 326, 327, 1, 0, 0, 0, 327, 325, 1, 0, 0, 0, 327, 328, 1, 0,
		0, 0, 328, 336, 1, 0, 0, 0, 329, 333, 5, 46, 0, 0, 330, 332, 3, 77, 38,
		0, 331, 330, 1, 0, 0, 0, 332, 335, 1, 0, 0, 0, 333, 331, 1, 0, 0, 0, 333,
		334, 1, 0, 0, 0, 334, 337, 1, 0, 0, 0, 335, 333, 1, 0, 0, 0, 336, 329,
		1, 0, 0, 0, 336, 337, 1, 0, 0, 0, 337, 347, 1, 0, 0, 0, 338, 340, 3, 87,
		43, 0, 339, 341, 7, 7, 0, 0, 340, 339, 1, 0, 0, 0, 340, 341, 1, 0, 0, 0,
		341, 343, 1, 0, 0, 0, 342, 344, 3, 77, 38, 0, 343, 342, 1, 0, 0, 0, 344,
		345, 1, 0, 0, 0, 345, 343, 1, 0, 0, 0, 345, 346, 1, 0, 0, 0, 346, 348,
		1, 0, 0, 0, 347, 338, 1, 0, 0, 0, 347, 348, 1, 0, 0, 0, 348, 367, 1, 0,
		0, 0, 349, 351, 5, 46, 0, 0, 350, 352, 3, 77, 38, 0, 351, 350, 1, 0, 0,
		0, 352, 353, 1, 0, 0, 0, 353, 351, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 354,
		364, 1, 0, 0, 0, 355, 357, 3, 87, 43, 0, 356, 358, 7, 7, 0, 0, 357, 356,
		1, 0, 0, 0, 357, 358, 1, 0, 0, 0, 358, 360, 1, 0, 0, 0, 359, 361, 3, 77,
		38, 0, 360, 359, 1, 0, 0, 0, 361, 362, 1, 0, 0, 0, 362, 360, 1, 0, 0, 0,
		362, 363, 1, 0, 0, 0, 363, 365, 1, 0, 0, 0, 364, 355, 1, 0, 0, 0, 364,
		365, 1, 0, 0, 0, 365, 367, 1, 0, 0, 0, 366, 325, 1, 0, 0, 0, 366, 349,
		1, 0, 0, 0, 367, 72, 1, 0, 0, 0, 368, 374, 5, 39, 0, 0, 369, 373, 8, 8,
		0, 0, 370, 371, 5, 39, 0, 0, 371, 373, 5, 39, 0, 0, 372, 369, 1, 0, 0,
		0, 372, 370, 1, 0, 0, 0, 373, 376, 1, 0, 0, 0, 374, 372, 1, 0, 0, 0, 374,
		375, 1, 0, 0, 0, 375, 377, 1, 0, 0, 0, 376, 374, 1, 0, 0, 0, 377, 378,
		5, 39, 0, 0, 378, 74, 1, 0, 0, 0, 379, 380, 5, 42, 0, 0, 380, 76, 1, 0,
		0, 0, 381, 382, 7, 9, 0, 0, 382, 78, 1, 0, 0, 0, 383, 384, 7, 10, 0, 0,
		384, 80, 1, 0, 0, 0, 385, 386, 7, 11, 0, 0, 386, 82, 1, 0, 0, 0, 387, 388,
		7, 12, 0, 0, 388, 84, 1, 0, 0, 0, 389, 390, 7, 13, 0, 0, 390, 86, 1, 0,
		0, 0, 391, 392, 7, 14, 0, 0, 392, 88, 1, 0, 0, 0, 393, 394, 7, 15, 0, 0,
		394, 90, 1, 0, 0, 0, 395, 396, 7, 16, 0, 0, 396, 92, 1, 0, 0, 0, 397, 398,
		7, 17, 0, 0, 398, 94, 1, 0, 0, 0, 399, 400, 7, 18, 0, 0, 400, 96, 1, 0,
		0, 0, 401, 402, 7, 19, 0, 0, 402, 98, 1, 0, 0, 0, 403, 404, 7, 20, 0, 0,
		404, 100, 1, 0, 0, 0, 405, 406, 7, 21, 0, 0, 406, 102, 1, 0, 0, 0, 407,
		408, 7, 22, 0, 0, 408, 104, 1, 0, 0, 0, 409, 410, 7, 23, 0, 0, 410, 106,
		1, 0, 0, 0, 411, 412, 7, 24, 0, 0, 412, 108, 1, 0, 0, 0, 413, 414, 7, 25,
		0, 0, 414, 110, 1, 0, 0, 0, 415, 416, 7, 26, 0, 0, 416, 112, 1, 0, 0, 0,
		417, 418, 7, 27, 0, 0, 418, 114, 1, 0, 0, 0, 419, 420, 7, 28, 0, 0, 420,
		116, 1, 0, 0, 0, 421, 422, 7, 29, 0, 0, 422, 118, 1, 0, 0, 0, 423, 424,
		7, 30, 0, 0, 424, 120, 1, 0, 0, 0, 425, 426, 7, 31, 0, 0, 426, 122, 1,
		0, 0, 0, 427, 428, 7, 32, 0, 0, 428, 124, 1, 0, 0, 0, 429, 430, 7, 33,
		0, 0, 430, 126, 1, 0, 0, 0, 431, 432, 7, 34, 0, 0, 432, 128, 1, 0, 0, 0,
		433, 434, 7, 35, 0, 0, 434, 130, 1, 0, 0, 0, 23, 0, 138, 287, 289, 297,
		299, 307, 315, 318, 322, 327, 333, 336, 340, 345, 347, 353, 357, 362, 364,
		366, 372, 374, 2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SqlLexerInit initializes any static state used to implement SqlLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSqlLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SqlLexerInit() {
	staticData := &sqllexerLexerStaticData
	staticData.once.Do(sqllexerLexerInit)
}

// NewSqlLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSqlLexer(input antlr.CharStream) *SqlLexer {
	SqlLexerInit()
	l := new(SqlLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &sqllexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Sql.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SqlLexer tokens.
const (
	SqlLexerSPACE             = 1
	SqlLexerWS                = 2
	SqlLexerCOMMA             = 3
	SqlLexerL_BRACKET         = 4
	SqlLexerR_BRACKET         = 5
	SqlLexerEOQ               = 6
	SqlLexerK_SELECT          = 7
	SqlLexerK_WHERE           = 8
	SqlLexerK_WINDOW_TUMBLING = 9
	SqlLexerK_GROUP_BY        = 10
	SqlLexerK_AND             = 11
	SqlLexerK_OR              = 12
	SqlLexerK_IS              = 13
	SqlLexerK_LIKE            = 14
	SqlLexerK_NOT_LIKE        = 15
	SqlLexerK_EQUAL           = 16
	SqlLexerK_GREATER         = 17
	SqlLexerK_LESS            = 18
	SqlLexerK_LESS_EQUAL      = 19
	SqlLexerK_GREATER_EQUAL   = 20
	SqlLexerK_NOT_EQUAL       = 21
	SqlLexerK_NULL            = 22
	SqlLexerK_IS_NULL         = 23
	SqlLexerK_IS_NOT_NULL     = 24
	SqlLexerK_NOT             = 25
	SqlLexerK_NOT_IN          = 26
	SqlLexerK_IN              = 27
	SqlLexerK_TRUE            = 28
	SqlLexerK_FALSE           = 29
	SqlLexerK_COUNT           = 30
	SqlLexerK_MIN             = 31
	SqlLexerK_MAX             = 32
	SqlLexerK_AVG             = 33
	SqlLexerIDENTIFIER        = 34
	SqlLexerBOOLEAN_LITERAL   = 35
	SqlLexerNUMERIC_LITERAL   = 36
	SqlLexerSTRING_LITERAL    = 37
	SqlLexerSTAR              = 38
)
