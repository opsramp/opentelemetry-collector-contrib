// Code generated from Sql.g4 by ANTLR 4.10.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SqlLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var sqllexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func sqllexerLexerInit() {
	staticData := &sqllexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "", "", "','", "'('", "')'", "'.'", "';'", "", "", "", "", "", "",
		"", "", "", "", "'='", "'>'", "'<'", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "'*'",
	}
	staticData.symbolicNames = []string{
		"", "SPACE", "WS", "COMMA", "L_BRACKET", "R_BRACKET", "DOT", "EOQ",
		"BOOLEAN_LITERAL", "K_SELECT", "K_WHERE", "K_WINDOW_TUMBLING", "K_GROUP_BY",
		"K_AND", "K_OR", "K_IS", "K_LIKE", "K_NOT_LIKE", "K_EQUAL", "K_GREATER",
		"K_LESS", "K_LESS_EQUAL", "K_GREATER_EQUAL", "K_NOT_EQUAL", "K_NULL",
		"K_IS_NULL", "K_IS_NOT_NULL", "K_NOT", "K_NOT_IN", "K_IN", "K_COUNT",
		"K_SUM", "K_MIN", "K_MAX", "K_AVG", "K_TRUE", "K_FALSE", "K_UPPER",
		"K_LOWER", "IDENTIFIER", "NUMERIC_LITERAL", "STRING_LITERAL", "STAR",
	}
	staticData.ruleNames = []string{
		"SPACE", "WS", "COMMA", "L_BRACKET", "R_BRACKET", "DOT", "EOQ", "BOOLEAN_LITERAL",
		"K_SELECT", "K_WHERE", "K_WINDOW_TUMBLING", "K_GROUP_BY", "K_AND", "K_OR",
		"K_IS", "K_LIKE", "K_NOT_LIKE", "K_EQUAL", "K_GREATER", "K_LESS", "K_LESS_EQUAL",
		"K_GREATER_EQUAL", "K_NOT_EQUAL", "K_NULL", "K_IS_NULL", "K_IS_NOT_NULL",
		"K_NOT", "K_NOT_IN", "K_IN", "K_COUNT", "K_SUM", "K_MIN", "K_MAX", "K_AVG",
		"K_TRUE", "K_FALSE", "K_UPPER", "K_LOWER", "IDENTIFIER", "NUMERIC_LITERAL",
		"STRING_LITERAL", "STAR", "DIGIT", "A", "B", "C", "D", "E", "F", "G",
		"H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U",
		"V", "W", "X", "Y", "Z",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 42, 461, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 4, 1, 145, 8, 1, 11, 1, 12,
		1, 146, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1,
		6, 1, 6, 1, 7, 1, 7, 3, 7, 163, 8, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1,
		15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1,
		20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32,
		1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1,
		35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36,
		1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 5,
		38, 318, 8, 38, 10, 38, 12, 38, 321, 9, 38, 1, 38, 1, 38, 1, 38, 1, 38,
		1, 38, 5, 38, 328, 8, 38, 10, 38, 12, 38, 331, 9, 38, 1, 38, 1, 38, 1,
		38, 5, 38, 336, 8, 38, 10, 38, 12, 38, 339, 9, 38, 1, 38, 1, 38, 1, 38,
		5, 38, 344, 8, 38, 10, 38, 12, 38, 347, 9, 38, 3, 38, 349, 8, 38, 1, 39,
		4, 39, 352, 8, 39, 11, 39, 12, 39, 353, 1, 39, 1, 39, 5, 39, 358, 8, 39,
		10, 39, 12, 39, 361, 9, 39, 3, 39, 363, 8, 39, 1, 39, 1, 39, 3, 39, 367,
		8, 39, 1, 39, 4, 39, 370, 8, 39, 11, 39, 12, 39, 371, 3, 39, 374, 8, 39,
		1, 39, 1, 39, 4, 39, 378, 8, 39, 11, 39, 12, 39, 379, 1, 39, 1, 39, 3,
		39, 384, 8, 39, 1, 39, 4, 39, 387, 8, 39, 11, 39, 12, 39, 388, 3, 39, 391,
		8, 39, 3, 39, 393, 8, 39, 1, 40, 1, 40, 1, 40, 1, 40, 5, 40, 399, 8, 40,
		10, 40, 12, 40, 402, 9, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1,
		43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48,
		1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1,
		53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58,
		1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1,
		64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 67, 1, 67, 1, 68, 1, 68, 0, 0,
		69, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21,
		11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39,
		20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57,
		29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75,
		38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 0, 87, 0, 89, 0, 91, 0, 93, 0,
		95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105, 0, 107, 0, 109, 0, 111, 0, 113,
		0, 115, 0, 117, 0, 119, 0, 121, 0, 123, 0, 125, 0, 127, 0, 129, 0, 131,
		0, 133, 0, 135, 0, 137, 0, 1, 0, 36, 3, 0, 9, 11, 13, 13, 32, 32, 2, 0,
		9, 9, 32, 32, 1, 0, 34, 34, 1, 0, 96, 96, 1, 0, 93, 93, 3, 0, 65, 90, 95,
		95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 43, 43, 45, 45,
		1, 0, 39, 39, 1, 0, 48, 57, 2, 0, 65, 65, 97, 97, 2, 0, 66, 66, 98, 98,
		2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2, 0, 69, 69, 101, 101, 2,
		0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104, 2,
		0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107, 2,
		0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2, 0, 78, 78, 110, 110, 2,
		0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2, 0, 81, 81, 113, 113, 2,
		0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116, 2,
		0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2, 0, 87, 87, 119, 119, 2,
		0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2, 0, 90, 90, 122, 122, 457,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0,
		0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0,
		0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1,
		0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39,
		1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0,
		47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0,
		0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0,
		0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0,
		0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1,
		0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 1, 139,
		1, 0, 0, 0, 3, 144, 1, 0, 0, 0, 5, 150, 1, 0, 0, 0, 7, 152, 1, 0, 0, 0,
		9, 154, 1, 0, 0, 0, 11, 156, 1, 0, 0, 0, 13, 158, 1, 0, 0, 0, 15, 162,
		1, 0, 0, 0, 17, 164, 1, 0, 0, 0, 19, 171, 1, 0, 0, 0, 21, 177, 1, 0, 0,
		0, 23, 193, 1, 0, 0, 0, 25, 202, 1, 0, 0, 0, 27, 206, 1, 0, 0, 0, 29, 209,
		1, 0, 0, 0, 31, 212, 1, 0, 0, 0, 33, 217, 1, 0, 0, 0, 35, 226, 1, 0, 0,
		0, 37, 228, 1, 0, 0, 0, 39, 230, 1, 0, 0, 0, 41, 232, 1, 0, 0, 0, 43, 235,
		1, 0, 0, 0, 45, 238, 1, 0, 0, 0, 47, 241, 1, 0, 0, 0, 49, 246, 1, 0, 0,
		0, 51, 250, 1, 0, 0, 0, 53, 256, 1, 0, 0, 0, 55, 260, 1, 0, 0, 0, 57, 265,
		1, 0, 0, 0, 59, 268, 1, 0, 0, 0, 61, 274, 1, 0, 0, 0, 63, 278, 1, 0, 0,
		0, 65, 282, 1, 0, 0, 0, 67, 286, 1, 0, 0, 0, 69, 290, 1, 0, 0, 0, 71, 295,
		1, 0, 0, 0, 73, 301, 1, 0, 0, 0, 75, 307, 1, 0, 0, 0, 77, 348, 1, 0, 0,
		0, 79, 392, 1, 0, 0, 0, 81, 394, 1, 0, 0, 0, 83, 405, 1, 0, 0, 0, 85, 407,
		1, 0, 0, 0, 87, 409, 1, 0, 0, 0, 89, 411, 1, 0, 0, 0, 91, 413, 1, 0, 0,
		0, 93, 415, 1, 0, 0, 0, 95, 417, 1, 0, 0, 0, 97, 419, 1, 0, 0, 0, 99, 421,
		1, 0, 0, 0, 101, 423, 1, 0, 0, 0, 103, 425, 1, 0, 0, 0, 105, 427, 1, 0,
		0, 0, 107, 429, 1, 0, 0, 0, 109, 431, 1, 0, 0, 0, 111, 433, 1, 0, 0, 0,
		113, 435, 1, 0, 0, 0, 115, 437, 1, 0, 0, 0, 117, 439, 1, 0, 0, 0, 119,
		441, 1, 0, 0, 0, 121, 443, 1, 0, 0, 0, 123, 445, 1, 0, 0, 0, 125, 447,
		1, 0, 0, 0, 127, 449, 1, 0, 0, 0, 129, 451, 1, 0, 0, 0, 131, 453, 1, 0,
		0, 0, 133, 455, 1, 0, 0, 0, 135, 457, 1, 0, 0, 0, 137, 459, 1, 0, 0, 0,
		139, 140, 7, 0, 0, 0, 140, 141, 1, 0, 0, 0, 141, 142, 6, 0, 0, 0, 142,
		2, 1, 0, 0, 0, 143, 145, 7, 1, 0, 0, 144, 143, 1, 0, 0, 0, 145, 146, 1,
		0, 0, 0, 146, 144, 1, 0, 0, 0, 146, 147, 1, 0, 0, 0, 147, 148, 1, 0, 0,
		0, 148, 149, 6, 1, 1, 0, 149, 4, 1, 0, 0, 0, 150, 151, 5, 44, 0, 0, 151,
		6, 1, 0, 0, 0, 152, 153, 5, 40, 0, 0, 153, 8, 1, 0, 0, 0, 154, 155, 5,
		41, 0, 0, 155, 10, 1, 0, 0, 0, 156, 157, 5, 46, 0, 0, 157, 12, 1, 0, 0,
		0, 158, 159, 5, 59, 0, 0, 159, 14, 1, 0, 0, 0, 160, 163, 3, 69, 34, 0,
		161, 163, 3, 71, 35, 0, 162, 160, 1, 0, 0, 0, 162, 161, 1, 0, 0, 0, 163,
		16, 1, 0, 0, 0, 164, 165, 3, 123, 61, 0, 165, 166, 3, 95, 47, 0, 166, 167,
		3, 109, 54, 0, 167, 168, 3, 95, 47, 0, 168, 169, 3, 91, 45, 0, 169, 170,
		3, 125, 62, 0, 170, 18, 1, 0, 0, 0, 171, 172, 3, 131, 65, 0, 172, 173,
		3, 101, 50, 0, 173, 174, 3, 95, 47, 0, 174, 175, 3, 121, 60, 0, 175, 176,
		3, 95, 47, 0, 176, 20, 1, 0, 0, 0, 177, 178, 3, 131, 65, 0, 178, 179, 3,
		103, 51, 0, 179, 180, 3, 113, 56, 0, 180, 181, 3, 93, 46, 0, 181, 182,
		3, 115, 57, 0, 182, 183, 3, 131, 65, 0, 183, 184, 3, 1, 0, 0, 184, 185,
		3, 125, 62, 0, 185, 186, 3, 127, 63, 0, 186, 187, 3, 111, 55, 0, 187, 188,
		3, 89, 44, 0, 188, 189, 3, 109, 54, 0, 189, 190, 3, 103, 51, 0, 190, 191,
		3, 113, 56, 0, 191, 192, 3, 99, 49, 0, 192, 22, 1, 0, 0, 0, 193, 194, 3,
		99, 49, 0, 194, 195, 3, 121, 60, 0, 195, 196, 3, 115, 57, 0, 196, 197,
		3, 127, 63, 0, 197, 198, 3, 117, 58, 0, 198, 199, 3, 1, 0, 0, 199, 200,
		3, 89, 44, 0, 200, 201, 3, 135, 67, 0, 201, 24, 1, 0, 0, 0, 202, 203, 3,
		87, 43, 0, 203, 204, 3, 113, 56, 0, 204, 205, 3, 93, 46, 0, 205, 26, 1,
		0, 0, 0, 206, 207, 3, 115, 57, 0, 207, 208, 3, 121, 60, 0, 208, 28, 1,
		0, 0, 0, 209, 210, 3, 103, 51, 0, 210, 211, 3, 123, 61, 0, 211, 30, 1,
		0, 0, 0, 212, 213, 3, 109, 54, 0, 213, 214, 3, 103, 51, 0, 214, 215, 3,
		107, 53, 0, 215, 216, 3, 95, 47, 0, 216, 32, 1, 0, 0, 0, 217, 218, 3, 113,
		56, 0, 218, 219, 3, 115, 57, 0, 219, 220, 3, 125, 62, 0, 220, 221, 3, 1,
		0, 0, 221, 222, 3, 109, 54, 0, 222, 223, 3, 103, 51, 0, 223, 224, 3, 107,
		53, 0, 224, 225, 3, 95, 47, 0, 225, 34, 1, 0, 0, 0, 226, 227, 5, 61, 0,
		0, 227, 36, 1, 0, 0, 0, 228, 229, 5, 62, 0, 0, 229, 38, 1, 0, 0, 0, 230,
		231, 5, 60, 0, 0, 231, 40, 1, 0, 0, 0, 232, 233, 3, 39, 19, 0, 233, 234,
		3, 35, 17, 0, 234, 42, 1, 0, 0, 0, 235, 236, 3, 37, 18, 0, 236, 237, 3,
		35, 17, 0, 237, 44, 1, 0, 0, 0, 238, 239, 5, 33, 0, 0, 239, 240, 3, 35,
		17, 0, 240, 46, 1, 0, 0, 0, 241, 242, 3, 113, 56, 0, 242, 243, 3, 127,
		63, 0, 243, 244, 3, 109, 54, 0, 244, 245, 3, 109, 54, 0, 245, 48, 1, 0,
		0, 0, 246, 247, 3, 29, 14, 0, 247, 248, 3, 1, 0, 0, 248, 249, 3, 47, 23,
		0, 249, 50, 1, 0, 0, 0, 250, 251, 3, 29, 14, 0, 251, 252, 3, 1, 0, 0, 252,
		253, 3, 53, 26, 0, 253, 254, 3, 1, 0, 0, 254, 255, 3, 47, 23, 0, 255, 52,
		1, 0, 0, 0, 256, 257, 3, 113, 56, 0, 257, 258, 3, 115, 57, 0, 258, 259,
		3, 125, 62, 0, 259, 54, 1, 0, 0, 0, 260, 261, 3, 53, 26, 0, 261, 262, 3,
		1, 0, 0, 262, 263, 3, 103, 51, 0, 263, 264, 3, 113, 56, 0, 264, 56, 1,
		0, 0, 0, 265, 266, 3, 103, 51, 0, 266, 267, 3, 113, 56, 0, 267, 58, 1,
		0, 0, 0, 268, 269, 3, 91, 45, 0, 269, 270, 3, 115, 57, 0, 270, 271, 3,
		127, 63, 0, 271, 272, 3, 113, 56, 0, 272, 273, 3, 125, 62, 0, 273, 60,
		1, 0, 0, 0, 274, 275, 3, 123, 61, 0, 275, 276, 3, 127, 63, 0, 276, 277,
		3, 111, 55, 0, 277, 62, 1, 0, 0, 0, 278, 279, 3, 111, 55, 0, 279, 280,
		3, 103, 51, 0, 280, 281, 3, 113, 56, 0, 281, 64, 1, 0, 0, 0, 282, 283,
		3, 111, 55, 0, 283, 284, 3, 87, 43, 0, 284, 285, 3, 133, 66, 0, 285, 66,
		1, 0, 0, 0, 286, 287, 3, 87, 43, 0, 287, 288, 3, 129, 64, 0, 288, 289,
		3, 99, 49, 0, 289, 68, 1, 0, 0, 0, 290, 291, 3, 125, 62, 0, 291, 292, 3,
		121, 60, 0, 292, 293, 3, 127, 63, 0, 293, 294, 3, 95, 47, 0, 294, 70, 1,
		0, 0, 0, 295, 296, 3, 97, 48, 0, 296, 297, 3, 87, 43, 0, 297, 298, 3, 109,
		54, 0, 298, 299, 3, 123, 61, 0, 299, 300, 3, 95, 47, 0, 300, 72, 1, 0,
		0, 0, 301, 302, 3, 127, 63, 0, 302, 303, 3, 117, 58, 0, 303, 304, 3, 117,
		58, 0, 304, 305, 3, 95, 47, 0, 305, 306, 3, 121, 60, 0, 306, 74, 1, 0,
		0, 0, 307, 308, 3, 109, 54, 0, 308, 309, 3, 115, 57, 0, 309, 310, 3, 131,
		65, 0, 310, 311, 3, 95, 47, 0, 311, 312, 3, 121, 60, 0, 312, 76, 1, 0,
		0, 0, 313, 319, 5, 34, 0, 0, 314, 318, 8, 2, 0, 0, 315, 316, 5, 34, 0,
		0, 316, 318, 5, 34, 0, 0, 317, 314, 1, 0, 0, 0, 317, 315, 1, 0, 0, 0, 318,
		321, 1, 0, 0, 0, 319, 317, 1, 0, 0, 0, 319, 320, 1, 0, 0, 0, 320, 322,
		1, 0, 0, 0, 321, 319, 1, 0, 0, 0, 322, 349, 5, 34, 0, 0, 323, 329, 5, 96,
		0, 0, 324, 328, 8, 3, 0, 0, 325, 326, 5, 96, 0, 0, 326, 328, 5, 96, 0,
		0, 327, 324, 1, 0, 0, 0, 327, 325, 1, 0, 0, 0, 328, 331, 1, 0, 0, 0, 329,
		327, 1, 0, 0, 0, 329, 330, 1, 0, 0, 0, 330, 332, 1, 0, 0, 0, 331, 329,
		1, 0, 0, 0, 332, 349, 5, 96, 0, 0, 333, 337, 5, 91, 0, 0, 334, 336, 8,
		4, 0, 0, 335, 334, 1, 0, 0, 0, 336, 339, 1, 0, 0, 0, 337, 335, 1, 0, 0,
		0, 337, 338, 1, 0, 0, 0, 338, 340, 1, 0, 0, 0, 339, 337, 1, 0, 0, 0, 340,
		349, 5, 93, 0, 0, 341, 345, 7, 5, 0, 0, 342, 344, 7, 6, 0, 0, 343, 342,
		1, 0, 0, 0, 344, 347, 1, 0, 0, 0, 345, 343, 1, 0, 0, 0, 345, 346, 1, 0,
		0, 0, 346, 349, 1, 0, 0, 0, 347, 345, 1, 0, 0, 0, 348, 313, 1, 0, 0, 0,
		348, 323, 1, 0, 0, 0, 348, 333, 1, 0, 0, 0, 348, 341, 1, 0, 0, 0, 349,
		78, 1, 0, 0, 0, 350, 352, 3, 85, 42, 0, 351, 350, 1, 0, 0, 0, 352, 353,
		1, 0, 0, 0, 353, 351, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 354, 362, 1, 0,
		0, 0, 355, 359, 5, 46, 0, 0, 356, 358, 3, 85, 42, 0, 357, 356, 1, 0, 0,
		0, 358, 361, 1, 0, 0, 0, 359, 357, 1, 0, 0, 0, 359, 360, 1, 0, 0, 0, 360,
		363, 1, 0, 0, 0, 361, 359, 1, 0, 0, 0, 362, 355, 1, 0, 0, 0, 362, 363,
		1, 0, 0, 0, 363, 373, 1, 0, 0, 0, 364, 366, 3, 95, 47, 0, 365, 367, 7,
		7, 0, 0, 366, 365, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0, 367, 369, 1, 0, 0,
		0, 368, 370, 3, 85, 42, 0, 369, 368, 1, 0, 0, 0, 370, 371, 1, 0, 0, 0,
		371, 369, 1, 0, 0, 0, 371, 372, 1, 0, 0, 0, 372, 374, 1, 0, 0, 0, 373,
		364, 1, 0, 0, 0, 373, 374, 1, 0, 0, 0, 374, 393, 1, 0, 0, 0, 375, 377,
		5, 46, 0, 0, 376, 378, 3, 85, 42, 0, 377, 376, 1, 0, 0, 0, 378, 379, 1,
		0, 0, 0, 379, 377, 1, 0, 0, 0, 379, 380, 1, 0, 0, 0, 380, 390, 1, 0, 0,
		0, 381, 383, 3, 95, 47, 0, 382, 384, 7, 7, 0, 0, 383, 382, 1, 0, 0, 0,
		383, 384, 1, 0, 0, 0, 384, 386, 1, 0, 0, 0, 385, 387, 3, 85, 42, 0, 386,
		385, 1, 0, 0, 0, 387, 388, 1, 0, 0, 0, 388, 386, 1, 0, 0, 0, 388, 389,
		1, 0, 0, 0, 389, 391, 1, 0, 0, 0, 390, 381, 1, 0, 0, 0, 390, 391, 1, 0,
		0, 0, 391, 393, 1, 0, 0, 0, 392, 351, 1, 0, 0, 0, 392, 375, 1, 0, 0, 0,
		393, 80, 1, 0, 0, 0, 394, 400, 5, 39, 0, 0, 395, 399, 8, 8, 0, 0, 396,
		397, 5, 39, 0, 0, 397, 399, 5, 39, 0, 0, 398, 395, 1, 0, 0, 0, 398, 396,
		1, 0, 0, 0, 399, 402, 1, 0, 0, 0, 400, 398, 1, 0, 0, 0, 400, 401, 1, 0,
		0, 0, 401, 403, 1, 0, 0, 0, 402, 400, 1, 0, 0, 0, 403, 404, 5, 39, 0, 0,
		404, 82, 1, 0, 0, 0, 405, 406, 5, 42, 0, 0, 406, 84, 1, 0, 0, 0, 407, 408,
		7, 9, 0, 0, 408, 86, 1, 0, 0, 0, 409, 410, 7, 10, 0, 0, 410, 88, 1, 0,
		0, 0, 411, 412, 7, 11, 0, 0, 412, 90, 1, 0, 0, 0, 413, 414, 7, 12, 0, 0,
		414, 92, 1, 0, 0, 0, 415, 416, 7, 13, 0, 0, 416, 94, 1, 0, 0, 0, 417, 418,
		7, 14, 0, 0, 418, 96, 1, 0, 0, 0, 419, 420, 7, 15, 0, 0, 420, 98, 1, 0,
		0, 0, 421, 422, 7, 16, 0, 0, 422, 100, 1, 0, 0, 0, 423, 424, 7, 17, 0,
		0, 424, 102, 1, 0, 0, 0, 425, 426, 7, 18, 0, 0, 426, 104, 1, 0, 0, 0, 427,
		428, 7, 19, 0, 0, 428, 106, 1, 0, 0, 0, 429, 430, 7, 20, 0, 0, 430, 108,
		1, 0, 0, 0, 431, 432, 7, 21, 0, 0, 432, 110, 1, 0, 0, 0, 433, 434, 7, 22,
		0, 0, 434, 112, 1, 0, 0, 0, 435, 436, 7, 23, 0, 0, 436, 114, 1, 0, 0, 0,
		437, 438, 7, 24, 0, 0, 438, 116, 1, 0, 0, 0, 439, 440, 7, 25, 0, 0, 440,
		118, 1, 0, 0, 0, 441, 442, 7, 26, 0, 0, 442, 120, 1, 0, 0, 0, 443, 444,
		7, 27, 0, 0, 444, 122, 1, 0, 0, 0, 445, 446, 7, 28, 0, 0, 446, 124, 1,
		0, 0, 0, 447, 448, 7, 29, 0, 0, 448, 126, 1, 0, 0, 0, 449, 450, 7, 30,
		0, 0, 450, 128, 1, 0, 0, 0, 451, 452, 7, 31, 0, 0, 452, 130, 1, 0, 0, 0,
		453, 454, 7, 32, 0, 0, 454, 132, 1, 0, 0, 0, 455, 456, 7, 33, 0, 0, 456,
		134, 1, 0, 0, 0, 457, 458, 7, 34, 0, 0, 458, 136, 1, 0, 0, 0, 459, 460,
		7, 35, 0, 0, 460, 138, 1, 0, 0, 0, 23, 0, 146, 162, 317, 319, 327, 329,
		337, 345, 348, 353, 359, 362, 366, 371, 373, 379, 383, 388, 390, 392, 398,
		400, 2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SqlLexerInit initializes any static state used to implement SqlLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSqlLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SqlLexerInit() {
	staticData := &sqllexerLexerStaticData
	staticData.once.Do(sqllexerLexerInit)
}

// NewSqlLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSqlLexer(input antlr.CharStream) *SqlLexer {
	SqlLexerInit()
	l := new(SqlLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &sqllexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Sql.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SqlLexer tokens.
const (
	SqlLexerSPACE             = 1
	SqlLexerWS                = 2
	SqlLexerCOMMA             = 3
	SqlLexerL_BRACKET         = 4
	SqlLexerR_BRACKET         = 5
	SqlLexerDOT               = 6
	SqlLexerEOQ               = 7
	SqlLexerBOOLEAN_LITERAL   = 8
	SqlLexerK_SELECT          = 9
	SqlLexerK_WHERE           = 10
	SqlLexerK_WINDOW_TUMBLING = 11
	SqlLexerK_GROUP_BY        = 12
	SqlLexerK_AND             = 13
	SqlLexerK_OR              = 14
	SqlLexerK_IS              = 15
	SqlLexerK_LIKE            = 16
	SqlLexerK_NOT_LIKE        = 17
	SqlLexerK_EQUAL           = 18
	SqlLexerK_GREATER         = 19
	SqlLexerK_LESS            = 20
	SqlLexerK_LESS_EQUAL      = 21
	SqlLexerK_GREATER_EQUAL   = 22
	SqlLexerK_NOT_EQUAL       = 23
	SqlLexerK_NULL            = 24
	SqlLexerK_IS_NULL         = 25
	SqlLexerK_IS_NOT_NULL     = 26
	SqlLexerK_NOT             = 27
	SqlLexerK_NOT_IN          = 28
	SqlLexerK_IN              = 29
	SqlLexerK_COUNT           = 30
	SqlLexerK_SUM             = 31
	SqlLexerK_MIN             = 32
	SqlLexerK_MAX             = 33
	SqlLexerK_AVG             = 34
	SqlLexerK_TRUE            = 35
	SqlLexerK_FALSE           = 36
	SqlLexerK_UPPER           = 37
	SqlLexerK_LOWER           = 38
	SqlLexerIDENTIFIER        = 39
	SqlLexerNUMERIC_LITERAL   = 40
	SqlLexerSTRING_LITERAL    = 41
	SqlLexerSTAR              = 42
)
